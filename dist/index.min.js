"use strict";var e=require("react");module.exports=function(n){var t=n.workflow,r=n.questionTypes,o=n.children,s=n.onComplete,u=function(n,t){var r=e.useState(0),o=r[0],s=r[1],u=e.useState({}),i=u[0],d=u[1],l=n[o];return{step:l,answers:i,setAnswers:d,handleNext:function(e){var r=null!=e?e:i,o=l.next(r),u="string"==typeof o?o:o.nextStepId,a="string"!=typeof o&&o.updatedAnswers?o.updatedAnswers:r;if("done"===u)t(a);else{d(a);var c=n.findIndex((function(e){return e.id===u}));if(-1===c)return void console.error('Error: Non-existent step "'.concat(u,'"'));s(c)}}}}(t,null!=s?s:function(){}),i=u.step,d=u.answers,l=u.setAnswers,a=u.handleNext;return o({step:i,answers:d,setAnswers:l,handleNext:a,renderQuestion:function(e){var n=i.questions.find((function(n){return n.id===e}));if(!n)return console.error('Question with ID "'.concat(e,'" not found.')),null;if(!r)return console.error("No question types defined."),null;var t=r[n.inputType];return t?t(n,d,l):(console.error('Question type "'.concat(n.inputType,'" not found in the provided questionTypes.')),null)}})};
//# sourceMappingURL=index.min.js.map
