{"version":3,"file":"index.js","sources":["../src/useWhizFlow.ts","../src/WhizFlow.tsx"],"sourcesContent":["// src/useWhizFlow.ts\nimport { useState } from 'react';\nimport { Step, Answers } from './types';\n\nexport const useWhizFlow = (\n  workflow: Step[],\n  onComplete: (answers: Answers) => void\n) => {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n  const [answers, setAnswers] = useState<Answers>({});\n  const [loading, setLoading] = useState<boolean>(false);\n  const [trail, setTrail] = useState<number[]>([]);\n\n  const step = workflow[currentStep];\n\n  const handlePrev = async () => {\n    const prevStep = trail.pop();\n    if (prevStep !== undefined && prevStep >= 0) {\n      setTrail([...trail]);\n      setCurrentStep(prevStep);\n    }\n  };\n\n  const handleNext = async (submitterAnswers?: Answers) => {\n    const currAnswers = submitterAnswers ?? answers;\n    const result = step.next(currAnswers);\n\n    let nextStepId = '';\n    let updatedAnswers = currAnswers;\n    if (typeof result === 'string') {\n      nextStepId = result;\n      updatedAnswers = currAnswers;\n    } else if (typeof (result as Promise<any>)?.then === 'function') {\n      try {\n        setLoading(true);\n        const awaitedResult = await result;\n        setLoading(false);\n        if (typeof awaitedResult === 'string') {\n          nextStepId = awaitedResult;\n        } else {\n          nextStepId = awaitedResult.nextStepId;\n          updatedAnswers = awaitedResult.updatedAnswers ?? currAnswers;\n        }\n      } catch (ex) {\n        console.error(`Error: Next step eval failed \"${ex}\"`);\n        return;\n      }\n    } else if ((result as any)?.nextStepId) {\n      nextStepId = (result as any).nextStepId;\n      updatedAnswers = (result as any).updatedAnswers ?? currAnswers;\n    }\n\n    if (nextStepId === 'done') {\n      onComplete(updatedAnswers);\n    } else {\n      setAnswers(updatedAnswers);\n      const nextStepIndex = workflow.findIndex(\n        (step) => step.id === nextStepId\n      );\n\n      if (nextStepIndex === -1) {\n        console.error(`Error: Non-existent step \"${nextStepId}\"`);\n        return;\n      }\n\n      setTrail([...trail, currentStep]);\n      setCurrentStep(nextStepIndex);\n    }\n  };\n\n  return {\n    step,\n    answers,\n    loading,\n    setAnswers,\n    handleNext,\n    handlePrev,\n  };\n};\n","import React from 'react';\nimport { WhizFlowProps } from './types';\nimport { useWhizFlow } from './useWhizFlow';\n\nexport const WhizFlow: React.FC<WhizFlowProps> = ({\n  workflow,\n  questionTypes,\n  children,\n  onComplete,\n}) => {\n  const defaultOnComplete = () => {};\n  const { step, answers, setAnswers, handleNext, handlePrev, loading } =\n    useWhizFlow(workflow, onComplete ?? defaultOnComplete);\n\n  const renderQuestion = (questionId: string) => {\n    const question = step.questions.find((q) => q.id === questionId);\n\n    if (!question) {\n      console.error(`Question with ID \"${questionId}\" not found.`);\n      return null;\n    }\n\n    if (!questionTypes) {\n      console.error(`No question types defined.`);\n      return null;\n    }\n\n    const renderFunc = questionTypes[question.inputType];\n\n    if (!renderFunc) {\n      console.error(\n        `Question type \"${question.inputType}\" not found in the provided questionTypes.`\n      );\n      return null;\n    }\n\n    return renderFunc(question, answers, setAnswers);\n  };\n\n  return children({\n    step,\n    answers,\n    loading,\n    setAnswers,\n    handleNext,\n    renderQuestion,\n    handlePrev,\n  });\n};\n"],"names":["useState"],"mappings":"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"}