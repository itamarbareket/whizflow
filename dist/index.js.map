{"version":3,"file":"index.js","sources":["../src/useWhizFlow.ts","../src/WhizFlow.tsx","../src/index.tsx"],"sourcesContent":["// src/useWhizFlow.ts\nimport { useState } from 'react';\nimport { Step, Answers } from './types';\n\nexport const useWhizFlow = (workflow: Step[], onComplete: (answers: Answers) => void) => {\n  const [currentStep, setCurrentStep] = useState<number>(0);\n  const [answers, setAnswers] = useState<Answers>({});\n\n  const step = workflow[currentStep];\n\n  const handleNext = () => {\n    const result = step.next(answers);\n\n    const nextStepId = typeof result === 'string' ? result : result.nextStepId;\n    const updatedAnswers = typeof result !== 'string' && result.updatedAnswers ? result.updatedAnswers : answers;\n\n    if (nextStepId === 'done') {\n      onComplete(updatedAnswers);\n    } else {\n      setAnswers(updatedAnswers);\n      const nextStepIndex = workflow.findIndex((step) => step.id === nextStepId);\n\n      if (nextStepIndex === -1) {\n        console.error(`Error: Non-existent step \"${nextStepId}\"`);\n        return;\n      }\n\n      setCurrentStep(nextStepIndex);\n    }\n  };\n\n  return {\n    step,\n    answers,\n    setAnswers,\n    handleNext,\n  };\n};\n","import React from 'react';\nimport { WhizFlowProps } from './types';\nimport { useWhizFlow } from './useWhizFlow';\n\nexport const WhizFlow: React.FC<WhizFlowProps> = ({\n  workflow,\n  questionTypes,\n  children,\n  onComplete,\n}) => {\n  const defaultOnComplete = () => {};\n  const { step, answers, setAnswers, handleNext } = useWhizFlow(\n    workflow,\n    onComplete ?? defaultOnComplete\n  );\n\n  const renderQuestion = (questionId: string) => {\n    const question = step.questions.find((q) => q.id === questionId);\n\n    if (!question) {\n      console.error(`Question with ID \"${questionId}\" not found.`);\n      return null;\n    }\n\n    if (!questionTypes) {\n      console.error(`No question types defined.`);\n      return null;\n    }\n\n    const renderFunc = questionTypes[question.inputType];\n\n    if (!renderFunc) {\n      console.error(\n        `Question type \"${question.inputType}\" not found in the provided questionTypes.`\n      );\n      return null;\n    }\n\n    return renderFunc(question, answers, setAnswers);\n  };\n\n  return children({ step, answers, setAnswers, handleNext, renderQuestion });\n};\n","import {WhizFlow} from 'WhizFlow';\n\nexport default {WhizFlow};\n"],"names":["useState"],"mappings":"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"}